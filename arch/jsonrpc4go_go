package api

import (
	"fmt"

	"github.com/sunquakes/jsonrpc4go"
)

type IntRpc struct{}

type Params struct {
	A int `json:"a"`
	B int `json:"b"`
}

func (i *IntRpc) Add(params *Params, result *int) error {
	a := params.A + params.B
	*result = interface{}(a).(int)
	return nil
}

func ServerStart() {
	s, _ := jsonrpc4go.NewServer("http", 3232) // the protocol is http
	s.Register(new(AddonS))
	s.Start()
}

func ClientStart() {
	result := new(AddonS)
	c, _ := jsonrpc4go.NewClient("", "http", "0.0.0.0:3232")
	err := c.Call("AddonS.IsBlackList", AttrIsBlackList{"791010", "791223"}, result, false)
	// data sent: {"id":"1604283212", "jsonrpc":"2.0", "method":"IntRpc/Add", "params":{"a":1,"b":6}}
	// data received: {"id":"1604283212", "jsonrpc":"2.0", "result":7}
	fmt.Println(err)     // nil
	fmt.Println(*result) // 7
}
